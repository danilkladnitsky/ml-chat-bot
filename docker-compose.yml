version: "3.8"

services:
    bot-service:
        env_file: .env
        container_name: bot
        hostname: bot
        build:
          context: bot-service
        ports:
            - "${BOT_PORT}:${BOT_PORT}"
        command: npm run start:prod
        environment:
            - ${BOT_TOKEN}
            - ${POSTGRES_PASSWORD}
            - ${POSTGRES_USER}
            - ${POSTGRES_HOST}
            - ${POSTGRES_DATABASE}
        restart: always
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:${BOT_PORT}/ping"]
            interval: 5s
            timeout: 5s
            retries: 3
        pull_policy: always

    ml-service:
        env_file: .env
        container_name: ml
        hostname: ml
        build:
          context: ml-service
        ports:
            - "${ML_PORT}:${ML_PORT}"
        command: npm run start:prod
        environment:
            - ${ML_PORT}
        restart: always
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:${ML_PORT}/ping"]
            interval: 5s
            timeout: 5s
            retries: 3
        pull_policy: always

    frontend:
        env_file: .env
        container_name: frontend
        build:
            context: frontend
            target: production
        ports:
            - 81:80
        environment:
            - ${API_HOST}
            - ${SOCKET_HOST}
            - ${VERSION}
        restart: always
        pull_policy: always